# Generated by roxygen2: do not edit by hand

export(AUPRC.single.class)
export(AUPRC.single.over.classes)
export(AUROC.single.class)
export(AUROC.single.over.classes)
export(Do.GPAV)
export(Do.GPAV.holdout)
export(Do.HTD)
export(Do.HTD.holdout)
export(Do.TPR.DAG)
export(Do.TPR.DAG.holdout)
export(Do.flat.scores.normalization)
export(Do.full.annotation.matrix)
export(Do.heuristic.methods)
export(Do.heuristic.methods.holdout)
export(F.measure.multilabel)
export(GPAV)
export(GPAV.over.examples)
export(GPAV.parallel)
export(TPR.DAG)
export(adj.upper.tri)
export(build.ancestors)
export(build.ancestors.bottom.up)
export(build.ancestors.per.level)
export(build.children)
export(build.consistent.graph)
export(build.descendants)
export(build.descendants.bottom.up)
export(build.descendants.per.level)
export(check.DAG.integrity)
export(check.annotation.matrix.integrity)
export(check.hierarchy)
export(check.hierarchy.single.sample)
export(compute.Fmeasure.multilabel)
export(compute.flipped.graph)
export(constraints.matrix)
export(create.stratified.fold.df)
export(distances.from.leaves)
export(do.edges.from.HPO.obo)
export(do.stratified.cv.data.over.classes)
export(do.stratified.cv.data.single.class)
export(do.subgraph)
export(do.submatrix)
export(do.unstratified.cv.data)
export(find.best.f)
export(find.leaves)
export(full.annotation.matrix)
export(get.children.bottom.up)
export(get.children.top.down)
export(get.parents)
export(get.parents.bottom.up)
export(get.parents.top.down)
export(get.parents.topological.sorting)
export(graph.levels)
export(heuristic.and)
export(heuristic.max)
export(heuristic.or)
export(htd)
export(lexicographical.topological.sort)
export(normalize.max)
export(precision.at.all.recall.levels.single.class)
export(precision.at.given.recall.levels.over.classes)
export(read.graph)
export(read.undirected.graph)
export(root.node)
export(scores.normalization)
export(specific.annotation.list)
export(specific.annotation.matrix)
export(transitive.closure.annotations)
export(tupla.matrix)
export(weighted.adjacency.matrix)
export(write.graph)
importFrom(RBGL,bellman.ford.sp)
importFrom(RBGL,dijkstra.sp)
importFrom(RBGL,transitive.closure)
importFrom(RBGL,tsort)
importFrom(doParallel,registerDoParallel)
importFrom(foreach,"%dopar%")
importFrom(foreach,foreach)
importFrom(graph,acc)
importFrom(graph,addEdge)
importFrom(graph,addNode)
importFrom(graph,adj)
importFrom(graph,degree)
importFrom(graph,edgeMatrix)
importFrom(graph,edgeWeights)
importFrom(graph,edges)
importFrom(graph,graphNEL)
importFrom(graph,nodes)
importFrom(graph,numEdges)
importFrom(graph,numNodes)
importFrom(methods,setGeneric)
importFrom(methods,setMethod)
importFrom(plyr,mapvalues)
importFrom(precrec,auc)
importFrom(precrec,evalmod)
importFrom(precrec,format_nfold)
importFrom(preprocessCore,normalize.quantiles)
importFrom(utils,read.table)
importFrom(utils,write.table)
useDynLib(HEMDAG, .registration=TRUE)
